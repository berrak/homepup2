#!/bin/sh
# /root/bin/fw.`hostname`
#############################################################
# MANAGED BY PUPPET. DO NOT EDIT. CHANGES WILL BE WIPED OUT #
#############################################################
#
# Iptables rules for gateway host gondor with two interfaces.
#
# Copyright (C) (2012-13) K-B.Kronlund <bkronmailbox-copyright@yahoo.se>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
## Basic data

IPTABLES=/sbin/iptables
MODPROBE=/sbin/modprobe

IPTSAVE=/sbin/iptables-save
IPTSAVEFILE=/root/bin/IPTABLES.FW

NET_INT="192.168.0.0/24"
IF_INT=eth0

NET_EXT="192.168.1.0/24"
IF_EXT=eth1

GWHOSTADDR="192.168.0.1"
GWHOSTEXTADDR="192.168.1.254"

# Internal special hosts (NTP, smtp, file server and Puppet server) which needs forwarding

NTPHOSTADDR="192.168.0.1"
PUPPETHOSTADDR="192.168.0.24"
SMTPHOSTADDR="192.168.0.11"
FILESERVERADDR="192.168.2.83"

# External special ssh hosts which needs forwarding

GITHUB="207.97.227.239"
MINECRAFTHOME="192.168.1.12"
MINECRAFTPUBL="217.70.39.231"

GOOGLEADSERV1="173.194.0.0/16"
GOOGLESYNDIC1="173.194.0.0/16"
GOOGLESYNDIC2="74.125.0.0/16"

# Printers

NETPRN_HP3015_ADDR="192.168.0.30"

## Log options
LOGOPT="LOG --log-level emerg --log-ip-options --log-tcp-options"

## Prevent excessive logging
RLIMIT="-m limit --limit 3/s --limit-burst 8"

## Load modules

$MODPROBE ip_conntrack
$MODPROBE ip_conntrack_ftp
$MODPROBE iptable_nat
$MODPROBE ip_nat_ftp


## Flush old rules, old custom tables

$IPTABLES -F
$IPTABLES -F -t nat
$IPTABLES -X

## Enable forwarding (must be set set in /etc/sysctl.conf)

echo 1 > /proc/sys/net/ipv4/ip_forward

#-------------------
## Default policies
#-------------------

$IPTABLES -P INPUT DROP
$IPTABLES -P OUTPUT DROP
$IPTABLES -P FORWARD DROP

#--------------------------------------------------------------------------------------
## Drop broadcast-packages (only log for initial test -- comment out not to fill logs)
$IPTABLES -N broadcast-drop
# $IPTABLES -A broadcast-drop -m pkttype --pkt-type broadcast -j $LOGOPT $RLIMIT --log-prefix "BROADCAST DROP "
$IPTABLES -A broadcast-drop -m pkttype --pkt-type broadcast -j DROP
$IPTABLES -A broadcast-drop -j RETURN
#--------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------
## Blacklist some internal servers, net printers etc that never should traffic the outside
$IPTABLES -N blacklist-log-n-drop
$IPTABLES -A blacklist-log-n-drop -s $NETPRN_HP3015_ADDR -j $LOGOPT $RLIMIT --log-prefix "BLACKLIST HOST DROP "
$IPTABLES -A blacklist-log-n-drop -s $NETPRN_HP3015_ADDR -j DROP
$IPTABLES -A blacklist-log-n-drop -j RETURN
#--------------------------------------------------------------------------------------

#--------------------------------------------------------------------------------------
# Drop google ads (only log for initial test -- comment out not to fill logs)
# Block google ads, i.e. 'googlesyndication.com' and 'googleadservices.com'
# if IP address change use '# host -t a <domain>' and '# whois <IP> | grep CIDR'
$IPTABLES -N googleads-log-n-reject
# googleadservices.com
$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLEADSERV1 -m tcp --dport 80 -j $LOGOPT $RLIMIT --log-prefix "REJECT GOOGLE ADS "
$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLEADSERV1 -m tcp --dport 80 -j REJECT

# googlesyndication.com
$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLESYNDIC1 -m tcp --dport 80 -j $LOGOPT $RLIMIT --log-prefix "REJECT GOOGLE ADS "
$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLESYNDIC1 -m tcp --dport 80 -j REJECT

$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLESYNDIC2 -m tcp --dport 80 -j $LOGOPT $RLIMIT --log-prefix "REJECT GOOGLE ADS "
$IPTABLES -A googleads-log-n-reject -p tcp -s $NET_INT -d GOOGLESYNDIC2 -m tcp --dport 80 -j REJECT

$IPTABLES -A googleads-log-n-reject -j RETURN
#--------------------------------------------------------------------------------------

## NAT (source address changed to fwhosts ext. address for all outbound traffic)
$IPTABLES -t nat -A POSTROUTING -o $IF_EXT -j MASQUERADE

## Drop all invalid input packages
$IPTABLES -A INPUT -m state --state INVALID -j $LOGOPT $RLIMIT --log-prefix "DROP INPUT INVALID "
$IPTABLES -A INPUT -m state --state INVALID -j DROP


## Free reign to loopback interfaces on fwhost
$IPTABLES -I INPUT 1 -i lo -j ACCEPT
$IPTABLES -I OUTPUT 1 -o lo -j ACCEPT

## =======================
## ALLOW OUTBOUND TRAFFIC
## =======================

#----------------------------------------------------------------
## Internal outbound traffic (from internal net --> external net)
#----------------------------------------------------------------

# allow established and related traffic pass
$IPTABLES -I FORWARD 1 -i $IF_INT -o $IF_EXT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Drop some internal hosts IP going out (e.g. Printer)
$IPTABLES -A FORWARD -j blacklist-log-n-drop

# Reject google ads requests from internal hosts going out 
$IPTABLES -A FORWARD -j googleads-log-n-reject

# allow ssh pass out to special external addresses (github, my minecraft servers, ...)
$IPTABLES -A FORWARD -p tcp -s $NET_INT -d $GITHUB -m tcp --dport 22 -m state --state NEW -j ACCEPT
$IPTABLES -A FORWARD -p tcp -s $NET_INT -d $MINECRAFTHOME -m tcp --dport 22 -m state --state NEW -j ACCEPT
$IPTABLES -A FORWARD -p tcp -s $NET_INT -d $MINECRAFTPUBL -m tcp --dport 22 -m state --state NEW -j ACCEPT

# allow whois queries pass out
$IPTABLES -A FORWARD -p tcp -s $NET_INT -m tcp --dport 43 -m state --state NEW -j ACCEPT

# allow DNS queries pass
$IPTABLES -A FORWARD -p tcp -s $NET_INT -m tcp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A FORWARD -p udp -s $NET_INT -m udp --dport 53 -m state --state NEW -j ACCEPT

# all web traffic pass
$IPTABLES -A FORWARD -p tcp -s $NET_INT -m tcp --dport 80 -m state --state NEW -j ACCEPT

# allow time queries from debian install out (should really test target domain)
$IPTABLES -A FORWARD -p udp -s $NET_INT -m udp --dport 123 -m state --state NEW -j ACCEPT

# allow https pass
$IPTABLES -A FORWARD -p tcp -s $NET_INT -m tcp --dport 443 -m state --state NEW,RELATED -j ACCEPT

# all git protocol pass 
$IPTABLES -A FORWARD -p tcp -s $NET_INT -m tcp --dport 9418 -m state --state NEW -j ACCEPT

# drop spoofed packages
$IPTABLES -A FORWARD -i $IF_INT  ! -s $NET_INT -o $IF_EXT -j $LOGOPT $RLIMIT --log-prefix "DROP FORWARDSPOOF INT2EXT "
$IPTABLES -A FORWARD -i $IF_INT  ! -s $NET_INT -o $IF_EXT -j DROP

# drop not forward any invalid packages
$IPTABLES -A FORWARD -m state --state INVALID -j $LOGOPT $RLIMIT --log-prefix "DROP FORWARD INVALID "
$IPTABLES -A FORWARD -m state --state INVALID -j DROP

#-----------------------------------------------------------
## Internal outbound traffic (from internal net --> fwhost)
#-----------------------------------------------------------

# allow established and related traffic to fwhost (from int domain home.tld)
$IPTABLES -A INPUT -s $NET_INT -d $GWHOSTADDR -m state --state ESTABLISHED,RELATED -j ACCEPT

# allow established and related traffic to fwhost (from special servers in domain sec.home.tld)
$IPTABLES -A INPUT -s $FILESERVERADDR -d $GWHOSTADDR -m state --state ESTABLISHED,RELATED -j ACCEPT

# time service communication with our internal net hosts
$IPTABLES -A INPUT -p udp -s $NET_INT -d $GWHOSTADDR -m udp --dport 123 -m state --state NEW -j ACCEPT

# allow puppet master to communicate with this client on port 8139
$IPTABLES -A INPUT -p tcp -s $PUPPETHOSTADDR -d $GWHOSTADDR -m tcp --dport 8139 -m state --state NEW -j ACCEPT

# allow some pings from internal net to this fw host
$IPTABLES -A INPUT -p icmp --icmp-type echo-reply -s $NET_INT -d $GWHOSTADDR -j ACCEPT
$IPTABLES -A INPUT -p icmp --icmp-type echo-request -s $NET_INT -d $GWHOSTADDR -j ACCEPT
$IPTABLES -A INPUT -p icmp --icmp-type destination-unreachable -s $NET_INT -d $GWHOSTADDR -j ACCEPT
$IPTABLES -A INPUT -p icmp --icmp-type time-exceeded -s $NET_INT -d $GWHOSTADDR -j ACCEPT

# drop all other from the internal net to this fwhost
$IPTABLES -A INPUT -i $IF_INT  ! -s $NET_INT -d $GWHOSTADDR -j $LOGOPT $RLIMIT --log-prefix "DROP INPUTSPOOF INT2FW "
$IPTABLES -A INPUT -i $IF_INT  ! -s $NET_INT -d $GWHOSTADDR -j DROP

# drop all other traffic - broadcasts can be tricky to catch
$IPTABLES -A INPUT -s $NET_INT -d $GWHOSTADDR -j $LOGOPT $RLIMIT --log-prefix "DROP INPUT INT2FW "
$IPTABLES -A INPUT -s $NET_INT -d $GWHOSTADDR -j DROP

# do not not allow broadcasts either, except if allowed (above) from internal net to fwhost
$IPTABLES -t filter -A INPUT -i $IF_INT -j broadcast-drop



## ======================
## ALLOW INBOUND TRAFFIC
## ======================

#---------------------------------------------------------------
## External inbound traffic (from external net --> internal net)
#---------------------------------------------------------------

# allow established and related traffic ext to internal net
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_INT -m state --state ESTABLISHED,RELATED -j ACCEPT

# drop spoof packages
$IPTABLES -A FORWARD -i $IF_EXT -s $NET_INT -o $IF_INT -j $LOGOPT $RLIMIT --log-prefix "DROP FORWARDSPOOF EXT2INT "
$IPTABLES -A FORWARD -i $IF_EXT -s $NET_INT -o $IF_INT -j DROP

# drop all other as well
$IPTABLES -A FORWARD -i $IF_EXT -d $NET_INT -j $LOGOPT $RLIMIT --log-prefix "DROP FORWARD EXT2INT "
$IPTABLES -A FORWARD -i $IF_EXT -d $NET_INT -j DROP


#---------------------------------------------------------
## External inbound traffic (from external net --> fwhost)
#---------------------------------------------------------

# allow established and related traffic to fwhost
$IPTABLES -A INPUT -i $IF_EXT -d $GWHOSTEXTADDR -m state --state ESTABLISHED,RELATED -j ACCEPT

# public time service broadcasts directed to our internal NTP server (this host)
$IPTABLES -A INPUT -p udp -i $IF_EXT -d $GWHOSTEXTADDR -m udp --dport 123 -m state --state NEW  -j ACCEPT

# drop all other from external net to fwhost
$IPTABLES -A INPUT -i $IF_EXT -s $GWHOSTEXTADDR -j $LOGOPT $RLIMIT --log-prefix "DROP INPUTSPOOF EXT2FW "
$IPTABLES -A INPUT -i $IF_EXT -s $GWHOSTEXTADDR -j DROP

# drop all other as well
$IPTABLES -A INPUT -d $GWHOSTEXTADDR -j $LOGOPT $RLIMIT --log-prefix "DROP INPUT EXT2FW "
$IPTABLES -A INPUT -d $GWHOSTEXTADDR -j DROP

## drop any other broadcasts, unless allowed (above) from external net to fwhost
$IPTABLES -t filter -A INPUT -i $IF_EXT -j broadcast-drop



## =================================================================
## ALLOW TRAFFIC - FWHOST TO INTERNAL-NET and special host addresses
## =================================================================

# allow established and related traffic to internal net
$IPTABLES -A OUTPUT -d $NET_INT -m state --state ESTABLISHED,RELATED -j ACCEPT

## allow smtp to connect to our internal mail (smtp) server
$IPTABLES -A OUTPUT -p tcp -d $SMTPHOSTADDR -m tcp --dport 25 -m state --state NEW -j ACCEPT

## allow puppet agent to connect to our Puppet server
$IPTABLES -A OUTPUT -p tcp -d $PUPPETHOSTADDR -m tcp --dport 8140 -m state --state NEW -j ACCEPT

# allow to broadcast the time service to  to internal net
$IPTABLES -A OUTPUT -p udp -d $NET_INT -m udp --dport 123 -m state --state NEW -j ACCEPT

# allow rsyslog out to internal file server (i.e. log server)
$IPTABLES -A OUTPUT -p tcp -d $FILESERVERADDR -m tcp --dport 514 -m state --state NEW -j ACCEPT

# allow only 'echo-request' ping initiated from this fwhost to internal net
$IPTABLES -A OUTPUT -p icmp --icmp-type echo-request -d $NET_INT -j ACCEPT

# deny all other traffic out from fwhost to internal net
$IPTABLES -A OUTPUT -d $NET_INT -j $LOGOPT $RLIMIT --log-prefix "DROP OUTPUT FW2INT "
$IPTABLES -A OUTPUT -d $NET_INT -j DROP

# deny any other broadcasts, unless allowed (above) from fwhost to internal net
$IPTABLES -t filter -A OUTPUT -d $NET_INT -j broadcast-drop



## =======================================
## ALLOW TRAFFIC - FWHOST TO EXTERNAL-NET
## =======================================

# allow established and related traffic out
$IPTABLES -A OUTPUT ! -d $NET_INT -m state --state ESTABLISHED,RELATED -j ACCEPT

# allow DNS queries
$IPTABLES -A OUTPUT -p tcp ! -d $NET_INT -m tcp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p udp ! -d $NET_INT -m udp --dport 53 -m state --state NEW -j ACCEPT

# allow web traffic out
$IPTABLES -A OUTPUT -p tcp ! -d $NET_INT -m tcp --dport 80 -m state --state NEW -j ACCEPT

# allow https out
$IPTABLES -A OUTPUT -p tcp ! -d $NET_INT -m tcp --dport 443 -m state --state NEW -j ACCEPT

# allow this NTP server communicate with other external time servers (broadcast)
$IPTABLES -A OUTPUT -p udp ! -d $NET_INT -m udp --dport 123 -m state --state NEW -j ACCEPT

# allow ping initiated from this fwhost to dmz net (all pings are blocked by FW upstream for Internet)
$IPTABLES -A OUTPUT -p icmp --icmp-type echo-request ! -d $NET_INT -j ACCEPT

# deny invalid packages going out
$IPTABLES -A OUTPUT -m state --state INVALID -j $LOGOPT $RLIMIT --log-prefix "DROP OUTPUT INVALID "
$IPTABLES -A OUTPUT -m state --state INVALID -j DROP

# deny any other other traffic - but broadcasts can be tricky to catch
$IPTABLES -A OUTPUT ! -d $NET_INT -j $LOGOPT $RLIMIT --log-prefix "DROP OUTPUT FW2EXT "
$IPTABLES -A OUTPUT ! -d $NET_INT -j DROP

# deny any other broadcasts, unless allowed (above) from fwhost to external net
$IPTABLES -t filter -A OUTPUT ! -d $NET_INT -j broadcast-drop


#-----------------------------------------------------------
# CATCH ALL LOG RULES (you may be suprise what ends up here)
#-----------------------------------------------------------

$IPTABLES -A INPUT ! -i lo -j $LOGOPT $RLIMIT --log-prefix "DROP INPUT DEFAULT "
$IPTABLES -A INPUT ! -i lo -j DROP

$IPTABLES -A OUTPUT ! -o lo -j $LOGOPT $RLIMIT --log-prefix "DROP OUTPUT DEFAULT "
$IPTABLES -A OUTPUT ! -o lo -j DROP

$IPTABLES -A FORWARD ! -i lo -j $LOGOPT $RLIMIT --log-prefix "DROP FORWARD DEFAULT "
$IPTABLES -A FORWARD ! -i lo -j DROP

##############################
## SAVE THE FILE
##############################

$IPTSAVE > $IPTSAVEFILE
chmod 700 $IPTSAVEFILE

##############################
## LIST LOADED IPTABLES RULES
##############################

$IPTABLES -L -v --line-numbers

exit 0

