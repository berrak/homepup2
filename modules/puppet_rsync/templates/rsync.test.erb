#!/bin/bash
#
# /root/bin/rsync.test
#
##############################################################
# MANAGED BY PUPPET. DO NOT EDIT. CHANGES WILL BE WIPED OUT. #
##############################################################
#
# Use as for various quick tests to rsync daemon.
#
HOSTNAME=`hostname`
PROG=$(basename $0)
LOGGER=/usr/bin/logger
RSYNC=/usr/bin/rsync
ECHO=/bin/echo

###############################
# MAIN PROGRAM
###############################

if [[ $EUID -ne 0 ]] ;then
   $ECHO "$PROG: This script must be run as root" 
   exit 0
fi

$ECHO -n "Please enter the remote RSYNC USER: "
read rsyncuser

if [ -z "$rsyncuser" ]; then
    $ECHO "Did not get any answer - aborting now."
    exit 1
else

    # start with some information
    
    echo "This script will test the connection to the rsync daemon by:"
    echo
    echo "l: list remote files in user home directory."
    echo "m: show available modules managed by daemon.".
    echo "d: do a dry-run (rsync) of all files in user home directory."
    echo "s: rsync with daemon of all files in user home directory."    
    echo
    echo "Note: If daemon is set to 'write only = true' no list is shown."
    echo
    echo -n "Enter \"modules\", \"list\" or \"sync\" [m/l/s] "
    read answer
    
    case "$answer" in
    
            [m])
    
                $RSYNC $rsyncuser@<%= rsyncsrvaddress %>::
                exitcode=$?
                
                if [ $exitcode -ne 0 ]; then
                    $ECHO "$0: ERROR: rsync returned ($exitcode) when showing modules for user ($rsyncuser)."
                    $LOGGER -p local0.debug "$0: ERROR: rsync returned ($exitcode) when showing modules for user ($rsyncuser)."
                else
                    $ECHO "$0: Successful module listing for user ($rsyncuser)."
                    $LOGGER -p local0.debug "$0: Successful module listing for user ($rsyncuser)."
                fi
                
                ;;   
    
    
            [l])
                
                $RSYNC $rsyncuser@<%= rsyncsrvaddress %>::${HOSTNAME}-home-${rsyncuser}
                exitcode=$?
                
                if [ $exitcode -ne 0 ]; then
                    $ECHO "$0: ERROR: rsync returned ($exitcode) when login for user ($rsyncuser) to (${HOSTNAME}-home-${rsyncuser})."
                    $LOGGER -p local0.debug "$0: ERROR: rsync returned ($exitcode) when login for user ($rsyncuser) to (${HOSTNAME}-home-${rsyncuser})"
                else
                    $ECHO "$0: Successful remote file listing for user ($rsyncuser) from (${HOSTNAME}-home-${rsyncuser})."
                    $LOGGER -p local0.debug "$0: Successful remote file listing for user ($rsyncuser) from (${HOSTNAME}-home-${rsyncuser})."
                fi
                
                ;;
    
            [ds])
            
                if [ $answer = 'd' ]; then
                    OPTIONS="-avhWC --progress --stats --dry-run"                
                else
                    OPTIONS="-avhWC --progress --stats"
                fi
                
                OPTIONS_FILE="/home/${rsyncuser}/bin/${rsyncuser}.backup"

                IPSRVADDR="<%= rsyncsrvaddress %>"
                SRC_DIRECTORIES=/home/${rsyncuser}/
                DEFAULT_EXCLUDES="--exclude=nfs/"
                
                # Source the user configuration file
                if [ -r "$OPTIONS_FILE" ]; then
                   source "$OPTIONS_FILE"
                else
                    $ECHO "$0: ERROR: rsync could not find user ($rsyncuser) optionfile ($OPTIONS_FILE) for (${HOSTNAME}-home-${rsyncuser}) - aborting!"
                    $LOGGER -p local0.debug "$0: ERROR: rsync could not find user ($rsyncuser) optionfile ($OPTIONS_FILE) for (${HOSTNAME}-home-${rsyncuser}) - aborting!"
                    exit 0
                fi
                
                $RSYNC $OPTIONS $DEFAULT_EXCLUDES $USER_EXCLUDES $SRC_DIRECTORIES ${rsyncuser}@${IPSRVADDR}::${HOSTNAME}-home-${rsyncuser}
                exitcode=$?
                if [ $exitcode -eq 0 ]; then
                    $ECHO
                    $ECHO "$0: Successful dry-run transfer of files for ($rsyncuser) to (${HOSTNAME}-home-${rsyncuser})."
                    $LOGGER -p local0.debug "$0: Successful dry-run transfer of files for ($rsyncuser) to (${HOSTNAME}-home-${rsyncuser})."
                fi
                
                ;;
                
            *)
              echo "Unrecognized option ($answer) or did not get any answer - aborting."
              exit 0
              ;;
                
    esac

fi
exit 0
