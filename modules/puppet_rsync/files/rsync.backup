#!/bin/bash
#
# /root/bin/rsync.backup
#
###############################################################
# MANAGED BY PUPPET. DO NOT EDIT. CHANGES WILL BE WIPED OUT.  #
###############################################################
#
# Copyright (C) (2012) K-B.Kronlund <bkronmailbox-copyright@yahoo.se>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
BACKUPHOST_IP="192.168.2.83"
HOSTNM=`hostname`
RSYNC=/usr/bin/rsync
TARGET="${USER}@{BACKUPHOST_IP}::${HOSTNM}-home"
LOGGER=/usr/bin/logger
MYDATE=`date +%H:%M:%S`
USERBACKUPFILE="$HOME/bin/$USER.backup"
export RSYNC_PASSWORD=pass

###############################
#
###############################
# Automatically backup listed directories to server at every login
# Content will be backed up to warp:/srv/backup/<hostname>/bekr/home
#
# Notes:
#     Use a space separated list of full paths to directory to backup.
#     If using a trailing slash only files in that directory will be
#     backed up (i.e. no sub directory will be created below /home.
#
#     Note also that directories are backed up recursive by default.
#
#     This is NOT normally what you want since all files messes up
#     at the backup root /home and you would backup everything below
#     (home/bekr (inclusive the nfs share). 
#
#     Todo: Use of user exclude that prevents e.g. nfs to be included.
#
#     Below directories starts at /home/bekr (i.e. $HOME)

BACKUP_DIRECTORIES="$HOME/TASKPLANNING $HOME/nyhetsbrevkrig"

###############################
# MAIN PROGRAM 
###############################

# This scripts is run at lightdm session start (i.e user login).
# User environment is set like $HOME and $USER.


# Ensure we have network connection and rsync server is operational
$RSYNC --password-file=/root/rsyncd.pwd $TARGET > /dev/null
remotesuccess=$?

if [ "$remotesuccess" -ne 0 ]; then
    $LOGGER -p local0.debug "$0: $MYDATE Error Remote rsync returned ($remotesuccess) at login! User ($USER) in ($HOME)."
    # RSYNC_PASSWORD=
    exit 1
else
    $LOGGER -p local0.debug "$0: $MYDATE Success Remote rsync initiated at login! Read user backupfile ($USERBACKUPFILE)."
fi

# read the user default backup configuration file with a white space separated list of directories to backup
if [ -r "$USERBACKUPFILE" ]; then
  . "$USERBACKUPFILE"
else
    $LOGGER -p local0.debug "$0: $MYDATE Error Can't read user backupfile ($USERBACKUPFILE)."
    exit 1
fi

$LOGGER -p local0.debug "$0: $MYDATE User backupfile directories ($BACKUP_DIRECTORIES)."

