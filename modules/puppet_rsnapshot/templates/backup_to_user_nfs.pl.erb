#!/usr/bin/perl -w
#
# /user/local/bin/backup_to_user_nfs.pl
#
#
# Usage:
#    Run as a 'session-setup-script' in /etc/lightdm/lightdm.conf
# That will then rsync the directories given in: ~/bin/$USER.backup
# to a local net rsync server at the given ip address (see below).
#
# Note 1:
#    Will not backup /root files to avoid roots sensitive keys
# to be backed up to a common server (potentially may be retrived)
#
# Note2:
#    Any users private keys will be backed if directory is $HOME,
# unless exclude options is set to not backup '~/.ssh'
#
# Note3:
#    Set mode of this file too 0700 (root can execute/read this)
#
# Note4:
#    logger is used for syslog facility 'local0.debug'
#
###############################################################
# MANAGED BY PUPPET. DO NOT EDIT. CHANGES WILL BE WIPED OUT.  #
###############################################################
#
# Copyright (C) (2012) K-B.Kronlund <bkronmailbox-copyright@yahoo.se>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
LOGGER=/usr/bin/logger
RSYNC=/usr/bin/rsync
OPTIONS="-aqWC"

OPTIONS_FILE="$HOME/bin/${USER}.backup"
DEFAULT_EXCLUDES="--exclude=nfs/"
SRC_DIRECTORIES="$HOME/"

###############################
# MAIN PROGRAM
###############################

# This scripts is run at lightdm session start (i.e user
# login). User environment is set like $HOME and $USER.

# Don't run this for 'root' (single '=' works for dash also)
#if [ "$USER" = "root" ]; then
#    $LOGGER -p local0.debug "$0: Error! Root is not allowed in backup script! User ($USER) in ($HOME)."
#    exit
#fi
#
## Source the user configuration file
#if [ -r "$OPTIONS_FILE" ]; then
#   source "$OPTIONS_FILE"
#else
#    $ECHO "$0: ERROR: rsync could not find user ($USER) optionfile ($OPTIONS_FILE) - aborting!"
#    $LOGGER -p local0.debug "$0: ERROR: rsync could not find user ($rsyncuser) optionfile ($OPTIONS_FILE) - aborting!"
#    exit 0
#fi
#
## Ensure we have network connection and that the rsync
## server is operational. Supress the returned module list.
#
## Note: use 'show module cmd' since it also works if daemon
## is configured to 'write only = true' for a backup system.
#export RSYNC_PASSWORD="$USER_PASSWORD"
#$RSYNC $USER@<%= rsyncsrvaddress %>::  > /dev/null
#exitcode=$?
#if [ $exitcode -ne 0 ]; then
#    $LOGGER -p local0.debug "$0: ERROR: rsync returned ($exitcode) at login! User ($USER) in ($HOME)."
#else
#    $LOGGER -p local0.debug "$0: Remote rsync initiated at ($USER) login! Found directory list ($SRC_DIRECTORIES)."
#
#    $RSYNC $OPTIONS $DEFAULT_EXCLUDES $USER_EXCLUDES $SRC_DIRECTORIES $USER@<%= rsyncsrvaddress %>::<%= myhost %>-home-$USER
#    exitcode=$?
#    if [ $exitcode -eq 0 ]; then
#        $LOGGER -p local0.debug "$0: Completed backup of directories ($SRC_DIRECTORIES) for ($USER)."
#    fi
#fi
## empty the environment
#RSYNC_PASSWORD=

